<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnDangNhap.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAATkAAABpCAYAAABBGFSyAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAFxEAABcRAcom8z8AAAZkSURBVHhe7d3PihxVG4Bx78BbcK03IQhegLh341Zw40JE
        iCCoCxFByEZ0oeDGhaAgSEAxYkAhkQhKCIouooigwT8L3Yw8hS+cnJz619PTp+bt58CP6a46VV3dUI9V
        nZnvu+fepy6dSFJSF4ycpMyMnKTUjJyk1IycpNSMnKTUjJyk1IycpNSMnKTUjJyk1IycpNSMnKTUjJyk
        1IycpNSMnKTUjJyk1IycpNSMnKTUjJyk1IycpNSMnKTUjJyk1IycpNSMnKTUjJyk1IycpNSMnKTUjJyk
        1IycpNSMnKTUjJyk1IycpNSMnKTUjJyk1IycpNSMnKTUjJyk1IycpNSMnKTUjJyk1Ixcb4+88PnJq+/e
        OJXn3/qmuW9JRq6723/+e7KP8cYH3zX3Lx05I9fbvsZnX/3a3L905IxcbzG47WytnxPDyElNRq63GGcd
        ufuf+fjk4ecuN7XmB7Z7+6Mfhp+x7KV3vj159MUrd8zbuk+u/jIcd2vdlIvv3Rze/9znpM0ycr3FOOvI
        fX/rr/9n3j2u3fhtMgDvX741ePbNr4d5v//xz7k76Xn/xKq1bky8b0LH9obuXDJyvcU4ROTiiqT05MVr
        w3LCxQnd2hbEjXnn9apmbeR4v8QtnvM5lc91bhi53mLUkeNXS55+/fody1piLI1cax24/ZwKHWHjSm7s
        NpXb2bil5efjr3w5hKG8zW1hPfOYX26/ZLty/tzrle+fOfVrtizZL8tjHT+X7FcHZeR6I06og/bYy18M
        8Zr71ZAYp40ciBiDkzSWcUXDtuXgeTkH7JvlcTsbg8csK+eCaBLU1lz2NXesa18v3j/q+fV74dj4Dq+e
        1/oPwNR+W8ehgzNyWxWRYxCwB0auDGLsI3JgXtyWcTUS39dx4oMruYhTebUSJznbczUT89kXozzh2Y55
        IKwxl8exfO5Y17wemMd8jp2oMbd8L+UVKtsSuZgXx8a8+pY19svPcj77aM3XwRm5Hh668OkQsSn8FUM5
        fvz57+EWtt5XjLHIcbLFiRgnYyAO9XyWzwWGIDA48WMZ2zBat7MEg1jG8wgAMSjngWWsWxK5pa+HeM/l
        MhDcpTEiiPU+eD72Xqbepw7GyPXA92+7DP46or6tjTEWOSIQV0ic/DwOrZOPeXVgCAFzYztOXgaPYw7b
        tCLSWkeAOJZyTol1SyK39PXQel9z63jPXJ3F++a4Wvtt3cYiAsrn1VqvgzByPewaOUb9DxQx9nG72rqq
        iasRti8xdo0cj6eOhWjMHeua18PUa9briBshrt93PJ/atja3XmfOyPWwy+0qV3FPvHb1rn3F2EfkiBYj
        vojnJ6O+rSUCjF0j17rtKy051jWvh6l91uu4YgPRL+eN7dcruU0zcltF6GJcv3m7+X0cYpw2coSME7I8
        YSN69W3t2HdydQDG1kU8Wyd/3ApPHSvWvB6m3n+9bmxuK84853OrPyNwRTy2Tgdj5Hrj9hNErVwekfvw
        yk+j/7KKGEsjxwkX4vsmTl5GfUVCzDhJOVnLbeLE3jVyiNtgbgtZDx4zj+PgeTm/tvb1eD62z3pdxIz3
        Gu87gtXab+DzYC6fG/MZXsV1Z+R6i1F/1xb/O3PlspYYSyLXGpy43JqVwSpFjGLwmGVxUse8tdFBxCD+
        IYL9covH47EghbWvx/OxfdbrCBXHUI44vrH91p8Ty1lWzlUXRq63GEuC1hJjLnLEI65KSvX3Ti3ltjG/
        3o7nY/uaWtdCIIhfa11Y+3pr56P8nGJZPa8MJOvq+erOyPUW46wjtyXEgKs3rgTLaPA4roi4yiu36YVg
        TR1LGTltkpHrLcYxRY5wEAZiBkKBeL6l27w4zvoKLhi5zTNyvcU4psgFYsfVHJFAfHHfmtsLx9P6y5DA
        uq1cdarJyPUWgz/bIlRrxeBxa//SkTNyve3r/8iGXzVp7V86ckauN35VpL46W2vud+mkI2bkJKVm5CSl
        ZuQkpWbkJKVm5CSlZuQkpWbkJKVm5CSlZuQkpWbkJKVm5CSlZuQkpWbkJKVm5CSlZuQkpWbkJKVm5CSl
        ZuQkpWbkJKVm5CSlZuQkpWbkJKVm5CSlZuQkpWbkJKVm5CSlZuQkpWbkJKVm5CSlZuQkpWbkJKVm5CSl
        ZuQkpWbkJKVm5CSlZuQkpWbkJKVm5CSlZuQkpWbkJKU2RO5BScrp0n3/AXtsKXMcQREcAAAAAElFTkSu
        QmCC
</value>
  </data>
</root>